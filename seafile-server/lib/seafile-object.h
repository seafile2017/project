/* seafile-object.h generated by valac 0.34.4, the Vala compiler, do not modify */


#ifndef __SEAFILE_OBJECT_H__
#define __SEAFILE_OBJECT_H__

#include <glib.h>
#include <glib-object.h>

G_BEGIN_DECLS


#define SEAFILE_TYPE_REPO (seafile_repo_get_type ())
#define SEAFILE_REPO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_REPO, SeafileRepo))
#define SEAFILE_REPO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_REPO, SeafileRepoClass))
#define SEAFILE_IS_REPO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_REPO))
#define SEAFILE_IS_REPO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_REPO))
#define SEAFILE_REPO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_REPO, SeafileRepoClass))

typedef struct _SeafileRepo SeafileRepo;
typedef struct _SeafileRepoClass SeafileRepoClass;
typedef struct _SeafileRepoPrivate SeafileRepoPrivate;

#define SEAFILE_TYPE_TRASH_REPO (seafile_trash_repo_get_type ())
#define SEAFILE_TRASH_REPO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_TRASH_REPO, SeafileTrashRepo))
#define SEAFILE_TRASH_REPO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_TRASH_REPO, SeafileTrashRepoClass))
#define SEAFILE_IS_TRASH_REPO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_TRASH_REPO))
#define SEAFILE_IS_TRASH_REPO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_TRASH_REPO))
#define SEAFILE_TRASH_REPO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_TRASH_REPO, SeafileTrashRepoClass))

typedef struct _SeafileTrashRepo SeafileTrashRepo;
typedef struct _SeafileTrashRepoClass SeafileTrashRepoClass;
typedef struct _SeafileTrashRepoPrivate SeafileTrashRepoPrivate;

#define SEAFILE_TYPE_SYNC_INFO (seafile_sync_info_get_type ())
#define SEAFILE_SYNC_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SYNC_INFO, SeafileSyncInfo))
#define SEAFILE_SYNC_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SYNC_INFO, SeafileSyncInfoClass))
#define SEAFILE_IS_SYNC_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SYNC_INFO))
#define SEAFILE_IS_SYNC_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SYNC_INFO))
#define SEAFILE_SYNC_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SYNC_INFO, SeafileSyncInfoClass))

typedef struct _SeafileSyncInfo SeafileSyncInfo;
typedef struct _SeafileSyncInfoClass SeafileSyncInfoClass;
typedef struct _SeafileSyncInfoPrivate SeafileSyncInfoPrivate;

#define SEAFILE_TYPE_SYNC_TASK (seafile_sync_task_get_type ())
#define SEAFILE_SYNC_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SYNC_TASK, SeafileSyncTask))
#define SEAFILE_SYNC_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SYNC_TASK, SeafileSyncTaskClass))
#define SEAFILE_IS_SYNC_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SYNC_TASK))
#define SEAFILE_IS_SYNC_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SYNC_TASK))
#define SEAFILE_SYNC_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SYNC_TASK, SeafileSyncTaskClass))

typedef struct _SeafileSyncTask SeafileSyncTask;
typedef struct _SeafileSyncTaskClass SeafileSyncTaskClass;
typedef struct _SeafileSyncTaskPrivate SeafileSyncTaskPrivate;

#define SEAFILE_TYPE_SESSION_INFO (seafile_session_info_get_type ())
#define SEAFILE_SESSION_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SESSION_INFO, SeafileSessionInfo))
#define SEAFILE_SESSION_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SESSION_INFO, SeafileSessionInfoClass))
#define SEAFILE_IS_SESSION_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SESSION_INFO))
#define SEAFILE_IS_SESSION_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SESSION_INFO))
#define SEAFILE_SESSION_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SESSION_INFO, SeafileSessionInfoClass))

typedef struct _SeafileSessionInfo SeafileSessionInfo;
typedef struct _SeafileSessionInfoClass SeafileSessionInfoClass;
typedef struct _SeafileSessionInfoPrivate SeafileSessionInfoPrivate;

#define SEAFILE_TYPE_CHECKOUT_TASK (seafile_checkout_task_get_type ())
#define SEAFILE_CHECKOUT_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_CHECKOUT_TASK, SeafileCheckoutTask))
#define SEAFILE_CHECKOUT_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_CHECKOUT_TASK, SeafileCheckoutTaskClass))
#define SEAFILE_IS_CHECKOUT_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_CHECKOUT_TASK))
#define SEAFILE_IS_CHECKOUT_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_CHECKOUT_TASK))
#define SEAFILE_CHECKOUT_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_CHECKOUT_TASK, SeafileCheckoutTaskClass))

typedef struct _SeafileCheckoutTask SeafileCheckoutTask;
typedef struct _SeafileCheckoutTaskClass SeafileCheckoutTaskClass;
typedef struct _SeafileCheckoutTaskPrivate SeafileCheckoutTaskPrivate;

#define SEAFILE_TYPE_DIFF_ENTRY (seafile_diff_entry_get_type ())
#define SEAFILE_DIFF_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_DIFF_ENTRY, SeafileDiffEntry))
#define SEAFILE_DIFF_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_DIFF_ENTRY, SeafileDiffEntryClass))
#define SEAFILE_IS_DIFF_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_DIFF_ENTRY))
#define SEAFILE_IS_DIFF_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_DIFF_ENTRY))
#define SEAFILE_DIFF_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_DIFF_ENTRY, SeafileDiffEntryClass))

typedef struct _SeafileDiffEntry SeafileDiffEntry;
typedef struct _SeafileDiffEntryClass SeafileDiffEntryClass;
typedef struct _SeafileDiffEntryPrivate SeafileDiffEntryPrivate;

#define SEAFILE_TYPE_DELETED_ENTRY (seafile_deleted_entry_get_type ())
#define SEAFILE_DELETED_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_DELETED_ENTRY, SeafileDeletedEntry))
#define SEAFILE_DELETED_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_DELETED_ENTRY, SeafileDeletedEntryClass))
#define SEAFILE_IS_DELETED_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_DELETED_ENTRY))
#define SEAFILE_IS_DELETED_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_DELETED_ENTRY))
#define SEAFILE_DELETED_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_DELETED_ENTRY, SeafileDeletedEntryClass))

typedef struct _SeafileDeletedEntry SeafileDeletedEntry;
typedef struct _SeafileDeletedEntryClass SeafileDeletedEntryClass;
typedef struct _SeafileDeletedEntryPrivate SeafileDeletedEntryPrivate;

#define SEAFILE_TYPE_REPO_TOKEN_INFO (seafile_repo_token_info_get_type ())
#define SEAFILE_REPO_TOKEN_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_REPO_TOKEN_INFO, SeafileRepoTokenInfo))
#define SEAFILE_REPO_TOKEN_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_REPO_TOKEN_INFO, SeafileRepoTokenInfoClass))
#define SEAFILE_IS_REPO_TOKEN_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_REPO_TOKEN_INFO))
#define SEAFILE_IS_REPO_TOKEN_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_REPO_TOKEN_INFO))
#define SEAFILE_REPO_TOKEN_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_REPO_TOKEN_INFO, SeafileRepoTokenInfoClass))

typedef struct _SeafileRepoTokenInfo SeafileRepoTokenInfo;
typedef struct _SeafileRepoTokenInfoClass SeafileRepoTokenInfoClass;
typedef struct _SeafileRepoTokenInfoPrivate SeafileRepoTokenInfoPrivate;

#define SEAFILE_TYPE_SHARED_USER (seafile_shared_user_get_type ())
#define SEAFILE_SHARED_USER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SHARED_USER, SeafileSharedUser))
#define SEAFILE_SHARED_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SHARED_USER, SeafileSharedUserClass))
#define SEAFILE_IS_SHARED_USER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SHARED_USER))
#define SEAFILE_IS_SHARED_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SHARED_USER))
#define SEAFILE_SHARED_USER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SHARED_USER, SeafileSharedUserClass))

typedef struct _SeafileSharedUser SeafileSharedUser;
typedef struct _SeafileSharedUserClass SeafileSharedUserClass;
typedef struct _SeafileSharedUserPrivate SeafileSharedUserPrivate;

#define SEAFILE_TYPE_SHARED_GROUP (seafile_shared_group_get_type ())
#define SEAFILE_SHARED_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SHARED_GROUP, SeafileSharedGroup))
#define SEAFILE_SHARED_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SHARED_GROUP, SeafileSharedGroupClass))
#define SEAFILE_IS_SHARED_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SHARED_GROUP))
#define SEAFILE_IS_SHARED_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SHARED_GROUP))
#define SEAFILE_SHARED_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SHARED_GROUP, SeafileSharedGroupClass))

typedef struct _SeafileSharedGroup SeafileSharedGroup;
typedef struct _SeafileSharedGroupClass SeafileSharedGroupClass;
typedef struct _SeafileSharedGroupPrivate SeafileSharedGroupPrivate;

#define SEAFILE_TYPE_ENCRYPTION_INFO (seafile_encryption_info_get_type ())
#define SEAFILE_ENCRYPTION_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_ENCRYPTION_INFO, SeafileEncryptionInfo))
#define SEAFILE_ENCRYPTION_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_ENCRYPTION_INFO, SeafileEncryptionInfoClass))
#define SEAFILE_IS_ENCRYPTION_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_ENCRYPTION_INFO))
#define SEAFILE_IS_ENCRYPTION_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_ENCRYPTION_INFO))
#define SEAFILE_ENCRYPTION_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_ENCRYPTION_INFO, SeafileEncryptionInfoClass))

typedef struct _SeafileEncryptionInfo SeafileEncryptionInfo;
typedef struct _SeafileEncryptionInfoClass SeafileEncryptionInfoClass;
typedef struct _SeafileEncryptionInfoPrivate SeafileEncryptionInfoPrivate;

#define SEAFILE_TYPE_COMMIT (seafile_commit_get_type ())
#define SEAFILE_COMMIT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_COMMIT, SeafileCommit))
#define SEAFILE_COMMIT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_COMMIT, SeafileCommitClass))
#define SEAFILE_IS_COMMIT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_COMMIT))
#define SEAFILE_IS_COMMIT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_COMMIT))
#define SEAFILE_COMMIT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_COMMIT, SeafileCommitClass))

typedef struct _SeafileCommit SeafileCommit;
typedef struct _SeafileCommitClass SeafileCommitClass;
typedef struct _SeafileCommitPrivate SeafileCommitPrivate;

#define SEAFILE_TYPE_DIRENT (seafile_dirent_get_type ())
#define SEAFILE_DIRENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_DIRENT, SeafileDirent))
#define SEAFILE_DIRENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_DIRENT, SeafileDirentClass))
#define SEAFILE_IS_DIRENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_DIRENT))
#define SEAFILE_IS_DIRENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_DIRENT))
#define SEAFILE_DIRENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_DIRENT, SeafileDirentClass))

typedef struct _SeafileDirent SeafileDirent;
typedef struct _SeafileDirentClass SeafileDirentClass;
typedef struct _SeafileDirentPrivate SeafileDirentPrivate;

#define SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO (seafile_file_last_modified_info_get_type ())
#define SEAFILE_FILE_LAST_MODIFIED_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO, SeafileFileLastModifiedInfo))
#define SEAFILE_FILE_LAST_MODIFIED_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO, SeafileFileLastModifiedInfoClass))
#define SEAFILE_IS_FILE_LAST_MODIFIED_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO))
#define SEAFILE_IS_FILE_LAST_MODIFIED_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO))
#define SEAFILE_FILE_LAST_MODIFIED_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO, SeafileFileLastModifiedInfoClass))

typedef struct _SeafileFileLastModifiedInfo SeafileFileLastModifiedInfo;
typedef struct _SeafileFileLastModifiedInfoClass SeafileFileLastModifiedInfoClass;
typedef struct _SeafileFileLastModifiedInfoPrivate SeafileFileLastModifiedInfoPrivate;

#define SEAFILE_TYPE_DIR (seafile_dir_get_type ())
#define SEAFILE_DIR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_DIR, SeafileDir))
#define SEAFILE_DIR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_DIR, SeafileDirClass))
#define SEAFILE_IS_DIR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_DIR))
#define SEAFILE_IS_DIR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_DIR))
#define SEAFILE_DIR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_DIR, SeafileDirClass))

typedef struct _SeafileDir SeafileDir;
typedef struct _SeafileDirClass SeafileDirClass;
typedef struct _SeafileDirPrivate SeafileDirPrivate;

#define SEAFILE_TYPE_TASK (seafile_task_get_type ())
#define SEAFILE_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_TASK, SeafileTask))
#define SEAFILE_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_TASK, SeafileTaskClass))
#define SEAFILE_IS_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_TASK))
#define SEAFILE_IS_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_TASK))
#define SEAFILE_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_TASK, SeafileTaskClass))

typedef struct _SeafileTask SeafileTask;
typedef struct _SeafileTaskClass SeafileTaskClass;
typedef struct _SeafileTaskPrivate SeafileTaskPrivate;

#define SEAFILE_TYPE_CLONE_TASK (seafile_clone_task_get_type ())
#define SEAFILE_CLONE_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_CLONE_TASK, SeafileCloneTask))
#define SEAFILE_CLONE_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_CLONE_TASK, SeafileCloneTaskClass))
#define SEAFILE_IS_CLONE_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_CLONE_TASK))
#define SEAFILE_IS_CLONE_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_CLONE_TASK))
#define SEAFILE_CLONE_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_CLONE_TASK, SeafileCloneTaskClass))

typedef struct _SeafileCloneTask SeafileCloneTask;
typedef struct _SeafileCloneTaskClass SeafileCloneTaskClass;
typedef struct _SeafileCloneTaskPrivate SeafileCloneTaskPrivate;

#define SEAFILE_TYPE_BRANCH (seafile_branch_get_type ())
#define SEAFILE_BRANCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_BRANCH, SeafileBranch))
#define SEAFILE_BRANCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_BRANCH, SeafileBranchClass))
#define SEAFILE_IS_BRANCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_BRANCH))
#define SEAFILE_IS_BRANCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_BRANCH))
#define SEAFILE_BRANCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_BRANCH, SeafileBranchClass))

typedef struct _SeafileBranch SeafileBranch;
typedef struct _SeafileBranchClass SeafileBranchClass;
typedef struct _SeafileBranchPrivate SeafileBranchPrivate;

#define SEAFILE_TYPE_CRYPT_KEY (seafile_crypt_key_get_type ())
#define SEAFILE_CRYPT_KEY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_CRYPT_KEY, SeafileCryptKey))
#define SEAFILE_CRYPT_KEY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_CRYPT_KEY, SeafileCryptKeyClass))
#define SEAFILE_IS_CRYPT_KEY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_CRYPT_KEY))
#define SEAFILE_IS_CRYPT_KEY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_CRYPT_KEY))
#define SEAFILE_CRYPT_KEY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_CRYPT_KEY, SeafileCryptKeyClass))

typedef struct _SeafileCryptKey SeafileCryptKey;
typedef struct _SeafileCryptKeyClass SeafileCryptKeyClass;
typedef struct _SeafileCryptKeyPrivate SeafileCryptKeyPrivate;

#define SEAFILE_TYPE_WEB_ACCESS (seafile_web_access_get_type ())
#define SEAFILE_WEB_ACCESS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_WEB_ACCESS, SeafileWebAccess))
#define SEAFILE_WEB_ACCESS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_WEB_ACCESS, SeafileWebAccessClass))
#define SEAFILE_IS_WEB_ACCESS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_WEB_ACCESS))
#define SEAFILE_IS_WEB_ACCESS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_WEB_ACCESS))
#define SEAFILE_WEB_ACCESS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_WEB_ACCESS, SeafileWebAccessClass))

typedef struct _SeafileWebAccess SeafileWebAccess;
typedef struct _SeafileWebAccessClass SeafileWebAccessClass;
typedef struct _SeafileWebAccessPrivate SeafileWebAccessPrivate;

#define SEAFILE_TYPE_COPY_TASK (seafile_copy_task_get_type ())
#define SEAFILE_COPY_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_COPY_TASK, SeafileCopyTask))
#define SEAFILE_COPY_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_COPY_TASK, SeafileCopyTaskClass))
#define SEAFILE_IS_COPY_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_COPY_TASK))
#define SEAFILE_IS_COPY_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_COPY_TASK))
#define SEAFILE_COPY_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_COPY_TASK, SeafileCopyTaskClass))

typedef struct _SeafileCopyTask SeafileCopyTask;
typedef struct _SeafileCopyTaskClass SeafileCopyTaskClass;
typedef struct _SeafileCopyTaskPrivate SeafileCopyTaskPrivate;

#define SEAFILE_TYPE_COPY_RESULT (seafile_copy_result_get_type ())
#define SEAFILE_COPY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_COPY_RESULT, SeafileCopyResult))
#define SEAFILE_COPY_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_COPY_RESULT, SeafileCopyResultClass))
#define SEAFILE_IS_COPY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_COPY_RESULT))
#define SEAFILE_IS_COPY_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_COPY_RESULT))
#define SEAFILE_COPY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_COPY_RESULT, SeafileCopyResultClass))

typedef struct _SeafileCopyResult SeafileCopyResult;
typedef struct _SeafileCopyResultClass SeafileCopyResultClass;
typedef struct _SeafileCopyResultPrivate SeafileCopyResultPrivate;

struct _SeafileRepo {
	GObject parent_instance;
	SeafileRepoPrivate * priv;
	gchar _id[37];
	gchar* _name;
	gchar* _desc;
	gchar* _worktree;
	gchar* _relay_id;
};

struct _SeafileRepoClass {
	GObjectClass parent_class;
};

struct _SeafileTrashRepo {
	GObject parent_instance;
	SeafileTrashRepoPrivate * priv;
};

struct _SeafileTrashRepoClass {
	GObjectClass parent_class;
};

struct _SeafileSyncInfo {
	GObject parent_instance;
	SeafileSyncInfoPrivate * priv;
};

struct _SeafileSyncInfoClass {
	GObjectClass parent_class;
};

struct _SeafileSyncTask {
	GObject parent_instance;
	SeafileSyncTaskPrivate * priv;
};

struct _SeafileSyncTaskClass {
	GObjectClass parent_class;
};

struct _SeafileSessionInfo {
	GObject parent_instance;
	SeafileSessionInfoPrivate * priv;
};

struct _SeafileSessionInfoClass {
	GObjectClass parent_class;
};

struct _SeafileCheckoutTask {
	GObject parent_instance;
	SeafileCheckoutTaskPrivate * priv;
};

struct _SeafileCheckoutTaskClass {
	GObjectClass parent_class;
};

struct _SeafileDiffEntry {
	GObject parent_instance;
	SeafileDiffEntryPrivate * priv;
};

struct _SeafileDiffEntryClass {
	GObjectClass parent_class;
};

struct _SeafileDeletedEntry {
	GObject parent_instance;
	SeafileDeletedEntryPrivate * priv;
};

struct _SeafileDeletedEntryClass {
	GObjectClass parent_class;
};

struct _SeafileRepoTokenInfo {
	GObject parent_instance;
	SeafileRepoTokenInfoPrivate * priv;
};

struct _SeafileRepoTokenInfoClass {
	GObjectClass parent_class;
};

struct _SeafileSharedUser {
	GObject parent_instance;
	SeafileSharedUserPrivate * priv;
};

struct _SeafileSharedUserClass {
	GObjectClass parent_class;
};

struct _SeafileSharedGroup {
	GObject parent_instance;
	SeafileSharedGroupPrivate * priv;
};

struct _SeafileSharedGroupClass {
	GObjectClass parent_class;
};

struct _SeafileEncryptionInfo {
	GObject parent_instance;
	SeafileEncryptionInfoPrivate * priv;
};

struct _SeafileEncryptionInfoClass {
	GObjectClass parent_class;
};

struct _SeafileCommit {
	GObject parent_instance;
	SeafileCommitPrivate * priv;
	gchar _id[41];
	gchar* _creator;
	gchar* _desc;
	gint64 _ctime;
	gchar* _repo_id;
	gchar* _root_id;
};

struct _SeafileCommitClass {
	GObjectClass parent_class;
};

struct _SeafileDirent {
	GObject parent_instance;
	SeafileDirentPrivate * priv;
};

struct _SeafileDirentClass {
	GObjectClass parent_class;
};

struct _SeafileFileLastModifiedInfo {
	GObject parent_instance;
	SeafileFileLastModifiedInfoPrivate * priv;
};

struct _SeafileFileLastModifiedInfoClass {
	GObjectClass parent_class;
};

struct _SeafileDir {
	GObject parent_instance;
	SeafileDirPrivate * priv;
	gchar _id[41];
	GList* entries;
};

struct _SeafileDirClass {
	GObjectClass parent_class;
};

struct _SeafileTask {
	GObject parent_instance;
	SeafileTaskPrivate * priv;
	gchar _tx_id[37];
	gint64 _rsize;
	gint64 _dsize;
};

struct _SeafileTaskClass {
	GObjectClass parent_class;
};

struct _SeafileCloneTask {
	GObject parent_instance;
	SeafileCloneTaskPrivate * priv;
};

struct _SeafileCloneTaskClass {
	GObjectClass parent_class;
};

struct _SeafileBranch {
	GObject parent_instance;
	SeafileBranchPrivate * priv;
	gchar* _name;
	gchar* _commit_id;
	gchar* _repo_id;
};

struct _SeafileBranchClass {
	GObjectClass parent_class;
};

struct _SeafileCryptKey {
	GObject parent_instance;
	SeafileCryptKeyPrivate * priv;
};

struct _SeafileCryptKeyClass {
	GObjectClass parent_class;
};

struct _SeafileWebAccess {
	GObject parent_instance;
	SeafileWebAccessPrivate * priv;
};

struct _SeafileWebAccessClass {
	GObjectClass parent_class;
};

struct _SeafileCopyTask {
	GObject parent_instance;
	SeafileCopyTaskPrivate * priv;
};

struct _SeafileCopyTaskClass {
	GObjectClass parent_class;
};

struct _SeafileCopyResult {
	GObject parent_instance;
	SeafileCopyResultPrivate * priv;
};

struct _SeafileCopyResultClass {
	GObjectClass parent_class;
};


GType seafile_repo_get_type (void) G_GNUC_CONST;
SeafileRepo* seafile_repo_new (void);
SeafileRepo* seafile_repo_construct (GType object_type);
const gchar* seafile_repo_get_id (SeafileRepo* self);
void seafile_repo_set_id (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_name (SeafileRepo* self);
void seafile_repo_set_name (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_desc (SeafileRepo* self);
void seafile_repo_set_desc (SeafileRepo* self, const gchar* value);
gint seafile_repo_get_version (SeafileRepo* self);
void seafile_repo_set_version (SeafileRepo* self, gint value);
gint seafile_repo_get_last_modify (SeafileRepo* self);
void seafile_repo_set_last_modify (SeafileRepo* self, gint value);
gint64 seafile_repo_get_size (SeafileRepo* self);
void seafile_repo_set_size (SeafileRepo* self, gint64 value);
gint64 seafile_repo_get_file_count (SeafileRepo* self);
void seafile_repo_set_file_count (SeafileRepo* self, gint64 value);
const gchar* seafile_repo_get_head_cmmt_id (SeafileRepo* self);
void seafile_repo_set_head_cmmt_id (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_root (SeafileRepo* self);
void seafile_repo_set_root (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_repo_id (SeafileRepo* self);
void seafile_repo_set_repo_id (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_repo_name (SeafileRepo* self);
void seafile_repo_set_repo_name (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_repo_desc (SeafileRepo* self);
void seafile_repo_set_repo_desc (SeafileRepo* self, const gchar* value);
gint seafile_repo_get_last_modified (SeafileRepo* self);
void seafile_repo_set_last_modified (SeafileRepo* self, gint value);
gboolean seafile_repo_get_encrypted (SeafileRepo* self);
void seafile_repo_set_encrypted (SeafileRepo* self, gboolean value);
const gchar* seafile_repo_get_magic (SeafileRepo* self);
void seafile_repo_set_magic (SeafileRepo* self, const gchar* value);
gint seafile_repo_get_enc_version (SeafileRepo* self);
void seafile_repo_set_enc_version (SeafileRepo* self, gint value);
const gchar* seafile_repo_get_random_key (SeafileRepo* self);
void seafile_repo_set_random_key (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_worktree (SeafileRepo* self);
void seafile_repo_set_worktree (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_relay_id (SeafileRepo* self);
void seafile_repo_set_relay_id (SeafileRepo* self, const gchar* value);
gint seafile_repo_get_last_sync_time (SeafileRepo* self);
void seafile_repo_set_last_sync_time (SeafileRepo* self, gint value);
gboolean seafile_repo_get_auto_sync (SeafileRepo* self);
void seafile_repo_set_auto_sync (SeafileRepo* self, gboolean value);
gboolean seafile_repo_get_worktree_invalid (SeafileRepo* self);
void seafile_repo_set_worktree_invalid (SeafileRepo* self, gboolean value);
gboolean seafile_repo_get_is_virtual (SeafileRepo* self);
void seafile_repo_set_is_virtual (SeafileRepo* self, gboolean value);
const gchar* seafile_repo_get_origin_repo_id (SeafileRepo* self);
void seafile_repo_set_origin_repo_id (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_origin_repo_name (SeafileRepo* self);
void seafile_repo_set_origin_repo_name (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_origin_path (SeafileRepo* self);
void seafile_repo_set_origin_path (SeafileRepo* self, const gchar* value);
gboolean seafile_repo_get_is_original_owner (SeafileRepo* self);
void seafile_repo_set_is_original_owner (SeafileRepo* self, gboolean value);
const gchar* seafile_repo_get_virtual_perm (SeafileRepo* self);
void seafile_repo_set_virtual_perm (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_store_id (SeafileRepo* self);
void seafile_repo_set_store_id (SeafileRepo* self, const gchar* value);
gboolean seafile_repo_get_is_corrupted (SeafileRepo* self);
void seafile_repo_set_is_corrupted (SeafileRepo* self, gboolean value);
gboolean seafile_repo_get_repaired (SeafileRepo* self);
void seafile_repo_set_repaired (SeafileRepo* self, gboolean value);
const gchar* seafile_repo_get_share_type (SeafileRepo* self);
void seafile_repo_set_share_type (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_permission (SeafileRepo* self);
void seafile_repo_set_permission (SeafileRepo* self, const gchar* value);
const gchar* seafile_repo_get_user (SeafileRepo* self);
void seafile_repo_set_user (SeafileRepo* self, const gchar* value);
gint seafile_repo_get_group_id (SeafileRepo* self);
void seafile_repo_set_group_id (SeafileRepo* self, gint value);
gboolean seafile_repo_get_is_shared (SeafileRepo* self);
void seafile_repo_set_is_shared (SeafileRepo* self, gboolean value);
GType seafile_trash_repo_get_type (void) G_GNUC_CONST;
SeafileTrashRepo* seafile_trash_repo_new (void);
SeafileTrashRepo* seafile_trash_repo_construct (GType object_type);
const gchar* seafile_trash_repo_get_repo_id (SeafileTrashRepo* self);
void seafile_trash_repo_set_repo_id (SeafileTrashRepo* self, const gchar* value);
const gchar* seafile_trash_repo_get_repo_name (SeafileTrashRepo* self);
void seafile_trash_repo_set_repo_name (SeafileTrashRepo* self, const gchar* value);
const gchar* seafile_trash_repo_get_head_id (SeafileTrashRepo* self);
void seafile_trash_repo_set_head_id (SeafileTrashRepo* self, const gchar* value);
const gchar* seafile_trash_repo_get_owner_id (SeafileTrashRepo* self);
void seafile_trash_repo_set_owner_id (SeafileTrashRepo* self, const gchar* value);
gint64 seafile_trash_repo_get_size (SeafileTrashRepo* self);
void seafile_trash_repo_set_size (SeafileTrashRepo* self, gint64 value);
gint64 seafile_trash_repo_get_del_time (SeafileTrashRepo* self);
void seafile_trash_repo_set_del_time (SeafileTrashRepo* self, gint64 value);
GType seafile_sync_info_get_type (void) G_GNUC_CONST;
SeafileSyncInfo* seafile_sync_info_new (void);
SeafileSyncInfo* seafile_sync_info_construct (GType object_type);
const gchar* seafile_sync_info_get_repo_id (SeafileSyncInfo* self);
void seafile_sync_info_set_repo_id (SeafileSyncInfo* self, const gchar* value);
const gchar* seafile_sync_info_get_head_commit (SeafileSyncInfo* self);
void seafile_sync_info_set_head_commit (SeafileSyncInfo* self, const gchar* value);
gboolean seafile_sync_info_get_deleted_on_relay (SeafileSyncInfo* self);
void seafile_sync_info_set_deleted_on_relay (SeafileSyncInfo* self, gboolean value);
gboolean seafile_sync_info_get_bad_local_branch (SeafileSyncInfo* self);
void seafile_sync_info_set_bad_local_branch (SeafileSyncInfo* self, gboolean value);
gboolean seafile_sync_info_get_need_fetch (SeafileSyncInfo* self);
void seafile_sync_info_set_need_fetch (SeafileSyncInfo* self, gboolean value);
gboolean seafile_sync_info_get_need_upload (SeafileSyncInfo* self);
void seafile_sync_info_set_need_upload (SeafileSyncInfo* self, gboolean value);
gboolean seafile_sync_info_get_need_merge (SeafileSyncInfo* self);
void seafile_sync_info_set_need_merge (SeafileSyncInfo* self, gboolean value);
GType seafile_sync_task_get_type (void) G_GNUC_CONST;
SeafileSyncTask* seafile_sync_task_new (void);
SeafileSyncTask* seafile_sync_task_construct (GType object_type);
gboolean seafile_sync_task_get_is_sync_lan (SeafileSyncTask* self);
void seafile_sync_task_set_is_sync_lan (SeafileSyncTask* self, gboolean value);
gboolean seafile_sync_task_get_force_upload (SeafileSyncTask* self);
void seafile_sync_task_set_force_upload (SeafileSyncTask* self, gboolean value);
const gchar* seafile_sync_task_get_dest_id (SeafileSyncTask* self);
void seafile_sync_task_set_dest_id (SeafileSyncTask* self, const gchar* value);
const gchar* seafile_sync_task_get_repo_id (SeafileSyncTask* self);
void seafile_sync_task_set_repo_id (SeafileSyncTask* self, const gchar* value);
const gchar* seafile_sync_task_get_state (SeafileSyncTask* self);
void seafile_sync_task_set_state (SeafileSyncTask* self, const gchar* value);
const gchar* seafile_sync_task_get_error (SeafileSyncTask* self);
void seafile_sync_task_set_error (SeafileSyncTask* self, const gchar* value);
const gchar* seafile_sync_task_get_tx_id (SeafileSyncTask* self);
void seafile_sync_task_set_tx_id (SeafileSyncTask* self, const gchar* value);
GType seafile_session_info_get_type (void) G_GNUC_CONST;
SeafileSessionInfo* seafile_session_info_new (void);
SeafileSessionInfo* seafile_session_info_construct (GType object_type);
const gchar* seafile_session_info_get_datadir (SeafileSessionInfo* self);
void seafile_session_info_set_datadir (SeafileSessionInfo* self, const gchar* value);
GType seafile_checkout_task_get_type (void) G_GNUC_CONST;
SeafileCheckoutTask* seafile_checkout_task_new (void);
SeafileCheckoutTask* seafile_checkout_task_construct (GType object_type);
const gchar* seafile_checkout_task_get_repo_id (SeafileCheckoutTask* self);
void seafile_checkout_task_set_repo_id (SeafileCheckoutTask* self, const gchar* value);
const gchar* seafile_checkout_task_get_worktree (SeafileCheckoutTask* self);
void seafile_checkout_task_set_worktree (SeafileCheckoutTask* self, const gchar* value);
gint seafile_checkout_task_get_total_files (SeafileCheckoutTask* self);
void seafile_checkout_task_set_total_files (SeafileCheckoutTask* self, gint value);
gint seafile_checkout_task_get_finished_files (SeafileCheckoutTask* self);
void seafile_checkout_task_set_finished_files (SeafileCheckoutTask* self, gint value);
GType seafile_diff_entry_get_type (void) G_GNUC_CONST;
SeafileDiffEntry* seafile_diff_entry_new (void);
SeafileDiffEntry* seafile_diff_entry_construct (GType object_type);
const gchar* seafile_diff_entry_get_status (SeafileDiffEntry* self);
void seafile_diff_entry_set_status (SeafileDiffEntry* self, const gchar* value);
const gchar* seafile_diff_entry_get_name (SeafileDiffEntry* self);
void seafile_diff_entry_set_name (SeafileDiffEntry* self, const gchar* value);
const gchar* seafile_diff_entry_get_new_name (SeafileDiffEntry* self);
void seafile_diff_entry_set_new_name (SeafileDiffEntry* self, const gchar* value);
GType seafile_deleted_entry_get_type (void) G_GNUC_CONST;
SeafileDeletedEntry* seafile_deleted_entry_new (void);
SeafileDeletedEntry* seafile_deleted_entry_construct (GType object_type);
const gchar* seafile_deleted_entry_get_commit_id (SeafileDeletedEntry* self);
void seafile_deleted_entry_set_commit_id (SeafileDeletedEntry* self, const gchar* value);
const gchar* seafile_deleted_entry_get_obj_id (SeafileDeletedEntry* self);
void seafile_deleted_entry_set_obj_id (SeafileDeletedEntry* self, const gchar* value);
const gchar* seafile_deleted_entry_get_obj_name (SeafileDeletedEntry* self);
void seafile_deleted_entry_set_obj_name (SeafileDeletedEntry* self, const gchar* value);
const gchar* seafile_deleted_entry_get_basedir (SeafileDeletedEntry* self);
void seafile_deleted_entry_set_basedir (SeafileDeletedEntry* self, const gchar* value);
gint seafile_deleted_entry_get_mode (SeafileDeletedEntry* self);
void seafile_deleted_entry_set_mode (SeafileDeletedEntry* self, gint value);
gint seafile_deleted_entry_get_delete_time (SeafileDeletedEntry* self);
void seafile_deleted_entry_set_delete_time (SeafileDeletedEntry* self, gint value);
gint64 seafile_deleted_entry_get_file_size (SeafileDeletedEntry* self);
void seafile_deleted_entry_set_file_size (SeafileDeletedEntry* self, gint64 value);
const gchar* seafile_deleted_entry_get_scan_stat (SeafileDeletedEntry* self);
void seafile_deleted_entry_set_scan_stat (SeafileDeletedEntry* self, const gchar* value);
GType seafile_repo_token_info_get_type (void) G_GNUC_CONST;
SeafileRepoTokenInfo* seafile_repo_token_info_new (void);
SeafileRepoTokenInfo* seafile_repo_token_info_construct (GType object_type);
const gchar* seafile_repo_token_info_get_repo_id (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_repo_id (SeafileRepoTokenInfo* self, const gchar* value);
const gchar* seafile_repo_token_info_get_repo_name (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_repo_name (SeafileRepoTokenInfo* self, const gchar* value);
const gchar* seafile_repo_token_info_get_repo_owner (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_repo_owner (SeafileRepoTokenInfo* self, const gchar* value);
const gchar* seafile_repo_token_info_get_email (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_email (SeafileRepoTokenInfo* self, const gchar* value);
const gchar* seafile_repo_token_info_get_token (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_token (SeafileRepoTokenInfo* self, const gchar* value);
const gchar* seafile_repo_token_info_get_peer_id (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_peer_id (SeafileRepoTokenInfo* self, const gchar* value);
const gchar* seafile_repo_token_info_get_peer_ip (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_peer_ip (SeafileRepoTokenInfo* self, const gchar* value);
const gchar* seafile_repo_token_info_get_peer_name (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_peer_name (SeafileRepoTokenInfo* self, const gchar* value);
gint64 seafile_repo_token_info_get_sync_time (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_sync_time (SeafileRepoTokenInfo* self, gint64 value);
const gchar* seafile_repo_token_info_get_client_ver (SeafileRepoTokenInfo* self);
void seafile_repo_token_info_set_client_ver (SeafileRepoTokenInfo* self, const gchar* value);
GType seafile_shared_user_get_type (void) G_GNUC_CONST;
SeafileSharedUser* seafile_shared_user_new (void);
SeafileSharedUser* seafile_shared_user_construct (GType object_type);
const gchar* seafile_shared_user_get_repo_id (SeafileSharedUser* self);
void seafile_shared_user_set_repo_id (SeafileSharedUser* self, const gchar* value);
const gchar* seafile_shared_user_get_user (SeafileSharedUser* self);
void seafile_shared_user_set_user (SeafileSharedUser* self, const gchar* value);
const gchar* seafile_shared_user_get_perm (SeafileSharedUser* self);
void seafile_shared_user_set_perm (SeafileSharedUser* self, const gchar* value);
GType seafile_shared_group_get_type (void) G_GNUC_CONST;
SeafileSharedGroup* seafile_shared_group_new (void);
SeafileSharedGroup* seafile_shared_group_construct (GType object_type);
const gchar* seafile_shared_group_get_repo_id (SeafileSharedGroup* self);
void seafile_shared_group_set_repo_id (SeafileSharedGroup* self, const gchar* value);
gint seafile_shared_group_get_group_id (SeafileSharedGroup* self);
void seafile_shared_group_set_group_id (SeafileSharedGroup* self, gint value);
const gchar* seafile_shared_group_get_perm (SeafileSharedGroup* self);
void seafile_shared_group_set_perm (SeafileSharedGroup* self, const gchar* value);
GType seafile_encryption_info_get_type (void) G_GNUC_CONST;
SeafileEncryptionInfo* seafile_encryption_info_new (void);
SeafileEncryptionInfo* seafile_encryption_info_construct (GType object_type);
const gchar* seafile_encryption_info_get_repo_id (SeafileEncryptionInfo* self);
void seafile_encryption_info_set_repo_id (SeafileEncryptionInfo* self, const gchar* value);
const gchar* seafile_encryption_info_get_passwd (SeafileEncryptionInfo* self);
void seafile_encryption_info_set_passwd (SeafileEncryptionInfo* self, const gchar* value);
gint seafile_encryption_info_get_enc_version (SeafileEncryptionInfo* self);
void seafile_encryption_info_set_enc_version (SeafileEncryptionInfo* self, gint value);
const gchar* seafile_encryption_info_get_magic (SeafileEncryptionInfo* self);
void seafile_encryption_info_set_magic (SeafileEncryptionInfo* self, const gchar* value);
const gchar* seafile_encryption_info_get_random_key (SeafileEncryptionInfo* self);
void seafile_encryption_info_set_random_key (SeafileEncryptionInfo* self, const gchar* value);
GType seafile_commit_get_type (void) G_GNUC_CONST;
SeafileCommit* seafile_commit_new (void);
SeafileCommit* seafile_commit_construct (GType object_type);
const gchar* seafile_commit_get_id (SeafileCommit* self);
void seafile_commit_set_id (SeafileCommit* self, const gchar* value);
const gchar* seafile_commit_get_creator_name (SeafileCommit* self);
void seafile_commit_set_creator_name (SeafileCommit* self, const gchar* value);
const gchar* seafile_commit_get_creator (SeafileCommit* self);
void seafile_commit_set_creator (SeafileCommit* self, const gchar* value);
const gchar* seafile_commit_get_desc (SeafileCommit* self);
void seafile_commit_set_desc (SeafileCommit* self, const gchar* value);
gint64 seafile_commit_get_ctime (SeafileCommit* self);
void seafile_commit_set_ctime (SeafileCommit* self, gint64 value);
const gchar* seafile_commit_get_parent_id (SeafileCommit* self);
void seafile_commit_set_parent_id (SeafileCommit* self, const gchar* value);
const gchar* seafile_commit_get_second_parent_id (SeafileCommit* self);
void seafile_commit_set_second_parent_id (SeafileCommit* self, const gchar* value);
const gchar* seafile_commit_get_repo_id (SeafileCommit* self);
void seafile_commit_set_repo_id (SeafileCommit* self, const gchar* value);
const gchar* seafile_commit_get_root_id (SeafileCommit* self);
void seafile_commit_set_root_id (SeafileCommit* self, const gchar* value);
gint seafile_commit_get_version (SeafileCommit* self);
void seafile_commit_set_version (SeafileCommit* self, gint value);
gboolean seafile_commit_get_new_merge (SeafileCommit* self);
void seafile_commit_set_new_merge (SeafileCommit* self, gboolean value);
gboolean seafile_commit_get_conflict (SeafileCommit* self);
void seafile_commit_set_conflict (SeafileCommit* self, gboolean value);
const gchar* seafile_commit_get_rev_file_id (SeafileCommit* self);
void seafile_commit_set_rev_file_id (SeafileCommit* self, const gchar* value);
gint64 seafile_commit_get_rev_file_size (SeafileCommit* self);
void seafile_commit_set_rev_file_size (SeafileCommit* self, gint64 value);
const gchar* seafile_commit_get_rev_renamed_old_path (SeafileCommit* self);
void seafile_commit_set_rev_renamed_old_path (SeafileCommit* self, const gchar* value);
const gchar* seafile_commit_get_device_name (SeafileCommit* self);
void seafile_commit_set_device_name (SeafileCommit* self, const gchar* value);
GType seafile_dirent_get_type (void) G_GNUC_CONST;
SeafileDirent* seafile_dirent_new (void);
SeafileDirent* seafile_dirent_construct (GType object_type);
const gchar* seafile_dirent_get_obj_id (SeafileDirent* self);
void seafile_dirent_set_obj_id (SeafileDirent* self, const gchar* value);
const gchar* seafile_dirent_get_obj_name (SeafileDirent* self);
void seafile_dirent_set_obj_name (SeafileDirent* self, const gchar* value);
gint seafile_dirent_get_mode (SeafileDirent* self);
void seafile_dirent_set_mode (SeafileDirent* self, gint value);
gint seafile_dirent_get_version (SeafileDirent* self);
void seafile_dirent_set_version (SeafileDirent* self, gint value);
gint64 seafile_dirent_get_mtime (SeafileDirent* self);
void seafile_dirent_set_mtime (SeafileDirent* self, gint64 value);
gint64 seafile_dirent_get_size (SeafileDirent* self);
void seafile_dirent_set_size (SeafileDirent* self, gint64 value);
const gchar* seafile_dirent_get_modifier (SeafileDirent* self);
void seafile_dirent_set_modifier (SeafileDirent* self, const gchar* value);
const gchar* seafile_dirent_get_permission (SeafileDirent* self);
void seafile_dirent_set_permission (SeafileDirent* self, const gchar* value);
gboolean seafile_dirent_get_is_locked (SeafileDirent* self);
void seafile_dirent_set_is_locked (SeafileDirent* self, gboolean value);
const gchar* seafile_dirent_get_lock_owner (SeafileDirent* self);
void seafile_dirent_set_lock_owner (SeafileDirent* self, const gchar* value);
gint64 seafile_dirent_get_lock_time (SeafileDirent* self);
void seafile_dirent_set_lock_time (SeafileDirent* self, gint64 value);
gboolean seafile_dirent_get_is_shared (SeafileDirent* self);
void seafile_dirent_set_is_shared (SeafileDirent* self, gboolean value);
GType seafile_file_last_modified_info_get_type (void) G_GNUC_CONST;
SeafileFileLastModifiedInfo* seafile_file_last_modified_info_new (void);
SeafileFileLastModifiedInfo* seafile_file_last_modified_info_construct (GType object_type);
const gchar* seafile_file_last_modified_info_get_file_name (SeafileFileLastModifiedInfo* self);
void seafile_file_last_modified_info_set_file_name (SeafileFileLastModifiedInfo* self, const gchar* value);
gint64 seafile_file_last_modified_info_get_last_modified (SeafileFileLastModifiedInfo* self);
void seafile_file_last_modified_info_set_last_modified (SeafileFileLastModifiedInfo* self, gint64 value);
GType seafile_dir_get_type (void) G_GNUC_CONST;
SeafileDir* seafile_dir_new (void);
SeafileDir* seafile_dir_construct (GType object_type);
const gchar* seafile_dir_get_id (SeafileDir* self);
void seafile_dir_set_id (SeafileDir* self, const gchar* value);
gint seafile_dir_get_version (SeafileDir* self);
void seafile_dir_set_version (SeafileDir* self, gint value);
GType seafile_task_get_type (void) G_GNUC_CONST;
SeafileTask* seafile_task_new (void);
SeafileTask* seafile_task_construct (GType object_type);
const gchar* seafile_task_get_tx_id (SeafileTask* self);
void seafile_task_set_tx_id (SeafileTask* self, const gchar* value);
const gchar* seafile_task_get_ttype (SeafileTask* self);
void seafile_task_set_ttype (SeafileTask* self, const gchar* value);
const gchar* seafile_task_get_repo_id (SeafileTask* self);
void seafile_task_set_repo_id (SeafileTask* self, const gchar* value);
const gchar* seafile_task_get_dest_id (SeafileTask* self);
void seafile_task_set_dest_id (SeafileTask* self, const gchar* value);
const gchar* seafile_task_get_from_branch (SeafileTask* self);
void seafile_task_set_from_branch (SeafileTask* self, const gchar* value);
const gchar* seafile_task_get_to_branch (SeafileTask* self);
void seafile_task_set_to_branch (SeafileTask* self, const gchar* value);
const gchar* seafile_task_get_state (SeafileTask* self);
void seafile_task_set_state (SeafileTask* self, const gchar* value);
const gchar* seafile_task_get_rt_state (SeafileTask* self);
void seafile_task_set_rt_state (SeafileTask* self, const gchar* value);
const gchar* seafile_task_get_error_str (SeafileTask* self);
void seafile_task_set_error_str (SeafileTask* self, const gchar* value);
gint seafile_task_get_block_total (SeafileTask* self);
void seafile_task_set_block_total (SeafileTask* self, gint value);
gint seafile_task_get_block_done (SeafileTask* self);
void seafile_task_set_block_done (SeafileTask* self, gint value);
gint seafile_task_get_fs_objects_total (SeafileTask* self);
void seafile_task_set_fs_objects_total (SeafileTask* self, gint value);
gint seafile_task_get_fs_objects_done (SeafileTask* self);
void seafile_task_set_fs_objects_done (SeafileTask* self, gint value);
gint seafile_task_get_rate (SeafileTask* self);
void seafile_task_set_rate (SeafileTask* self, gint value);
gint64 seafile_task_get_rsize (SeafileTask* self);
void seafile_task_set_rsize (SeafileTask* self, gint64 value);
gint64 seafile_task_get_dsize (SeafileTask* self);
void seafile_task_set_dsize (SeafileTask* self, gint64 value);
GType seafile_clone_task_get_type (void) G_GNUC_CONST;
SeafileCloneTask* seafile_clone_task_new (void);
SeafileCloneTask* seafile_clone_task_construct (GType object_type);
const gchar* seafile_clone_task_get_state (SeafileCloneTask* self);
void seafile_clone_task_set_state (SeafileCloneTask* self, const gchar* value);
const gchar* seafile_clone_task_get_error_str (SeafileCloneTask* self);
void seafile_clone_task_set_error_str (SeafileCloneTask* self, const gchar* value);
const gchar* seafile_clone_task_get_repo_id (SeafileCloneTask* self);
void seafile_clone_task_set_repo_id (SeafileCloneTask* self, const gchar* value);
const gchar* seafile_clone_task_get_peer_id (SeafileCloneTask* self);
void seafile_clone_task_set_peer_id (SeafileCloneTask* self, const gchar* value);
const gchar* seafile_clone_task_get_repo_name (SeafileCloneTask* self);
void seafile_clone_task_set_repo_name (SeafileCloneTask* self, const gchar* value);
const gchar* seafile_clone_task_get_worktree (SeafileCloneTask* self);
void seafile_clone_task_set_worktree (SeafileCloneTask* self, const gchar* value);
const gchar* seafile_clone_task_get_tx_id (SeafileCloneTask* self);
void seafile_clone_task_set_tx_id (SeafileCloneTask* self, const gchar* value);
GType seafile_branch_get_type (void) G_GNUC_CONST;
SeafileBranch* seafile_branch_new (void);
SeafileBranch* seafile_branch_construct (GType object_type);
const gchar* seafile_branch_get_name (SeafileBranch* self);
void seafile_branch_set_name (SeafileBranch* self, const gchar* value);
const gchar* seafile_branch_get_commit_id (SeafileBranch* self);
void seafile_branch_set_commit_id (SeafileBranch* self, const gchar* value);
const gchar* seafile_branch_get_repo_id (SeafileBranch* self);
void seafile_branch_set_repo_id (SeafileBranch* self, const gchar* value);
GType seafile_crypt_key_get_type (void) G_GNUC_CONST;
SeafileCryptKey* seafile_crypt_key_new (void);
SeafileCryptKey* seafile_crypt_key_construct (GType object_type);
const gchar* seafile_crypt_key_get_key (SeafileCryptKey* self);
void seafile_crypt_key_set_key (SeafileCryptKey* self, const gchar* value);
const gchar* seafile_crypt_key_get_iv (SeafileCryptKey* self);
void seafile_crypt_key_set_iv (SeafileCryptKey* self, const gchar* value);
GType seafile_web_access_get_type (void) G_GNUC_CONST;
SeafileWebAccess* seafile_web_access_new (void);
SeafileWebAccess* seafile_web_access_construct (GType object_type);
const gchar* seafile_web_access_get_repo_id (SeafileWebAccess* self);
void seafile_web_access_set_repo_id (SeafileWebAccess* self, const gchar* value);
const gchar* seafile_web_access_get_obj_id (SeafileWebAccess* self);
void seafile_web_access_set_obj_id (SeafileWebAccess* self, const gchar* value);
const gchar* seafile_web_access_get_op (SeafileWebAccess* self);
void seafile_web_access_set_op (SeafileWebAccess* self, const gchar* value);
const gchar* seafile_web_access_get_username (SeafileWebAccess* self);
void seafile_web_access_set_username (SeafileWebAccess* self, const gchar* value);
GType seafile_copy_task_get_type (void) G_GNUC_CONST;
SeafileCopyTask* seafile_copy_task_new (void);
SeafileCopyTask* seafile_copy_task_construct (GType object_type);
gint64 seafile_copy_task_get_done (SeafileCopyTask* self);
void seafile_copy_task_set_done (SeafileCopyTask* self, gint64 value);
gint64 seafile_copy_task_get_total (SeafileCopyTask* self);
void seafile_copy_task_set_total (SeafileCopyTask* self, gint64 value);
gboolean seafile_copy_task_get_canceled (SeafileCopyTask* self);
void seafile_copy_task_set_canceled (SeafileCopyTask* self, gboolean value);
gboolean seafile_copy_task_get_failed (SeafileCopyTask* self);
void seafile_copy_task_set_failed (SeafileCopyTask* self, gboolean value);
gboolean seafile_copy_task_get_successful (SeafileCopyTask* self);
void seafile_copy_task_set_successful (SeafileCopyTask* self, gboolean value);
GType seafile_copy_result_get_type (void) G_GNUC_CONST;
SeafileCopyResult* seafile_copy_result_new (void);
SeafileCopyResult* seafile_copy_result_construct (GType object_type);
gboolean seafile_copy_result_get_background (SeafileCopyResult* self);
void seafile_copy_result_set_background (SeafileCopyResult* self, gboolean value);
const gchar* seafile_copy_result_get_task_id (SeafileCopyResult* self);
void seafile_copy_result_set_task_id (SeafileCopyResult* self, const gchar* value);


G_END_DECLS

#endif
